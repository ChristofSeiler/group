---
title: "Europe PMC IDs to each record, based on DOI"
author: "Wolfgang Huber"
date: 2024-02-10
format: 
  html:
    embed-resources: true
---
  

```{r}
#| label: global_options
#| echo: false
knitr::opts_chunk$set(cache = TRUE)
options(error = recover)
```

```{r}
#| label: libs
#| message: false
#| warning: false
library("europepmc")
library("dplyr")
workdir = ".."
```

```{r}
xin = readLines(file.path(workdir, "lop.bib"))
records = tibble(
  line = grep("^[[:space:]]*DOI[[:space:]]*=", xin, perl = TRUE)
)
dd = diff(records$line) 
# table(dd)
# lapply(wdoi[ dd > 16], function(i) xin[i+(-10:20)])
```

```{r}
#| label: cleanDOI
cleanDOI = function(x) {
  rv = gsub("[[:space:]]", "", x, perl = TRUE) |>
       sub("DOI=", "", x = _, fixed = TRUE) |>
       sub("^\\{", "",   x = _) |>
       sub("\\},*$", "", x = _) 
  ifelse(rv == "NA", NA_character_, rv)
}

records = mutate(records,
  DOI = cleanDOI(xin[line])
)

with(records, stopifnot(
  all(is.na(DOI) | ((nchar(DOI) >= 3) & (substring(DOI, 1, 3) == "10.")))
))
```

```{r}
#| label: runquery
fn = "epmc.Rdata"
if(file.exists(fn)) {
  load(fn)
} else {
  epmc = epmc_search_by_doi(with(records, DOI[!is.na(DOI)]))
  save(epmc, file = fn)
}
```

```{r}
#| label: showdf
select(epmc, all_of(c("id","pmid","pmcid")))
epmc = mutate(epmc,
  url = paste("https://europepmc.org/article", source, id, sep = "/")
)
```

Create a shell script that would open all URLs, to check them. (`download.files` does not result non diagnostically useful results as far as I could see.)

```{r}
#| label: verify1
#| eval: FALSE
#| echo: FALSE
downloaddir = "abstracts"
if (!dir.exists(downloaddir)) dir.create(downloaddir)
file.remove(dir(downloaddir, full.names = TRUE))
res = BiocParallel::bplapply(seq_len(nrow(epmc)), function(i) {
  download.file(
    url = epmc$url[i],
   destfile = file.path(downloaddir, paste0(epmc$source[i], ":", epmc$id[i], ".html")))
 })
```
```{r}
#| label: verify2
paste("open", paste(epmc$url, collapse = " ")) |> writeLines(con = "openall.sh") 
```

```{r}
mt = match(tolower(epmc$doi), tolower(records$DOI))
bad = which(is.na(mt))
stopifnot(length(bad)==2)
```

There are 2 "bad" rows in `epmc`. They are duplications:

```{r}
sapply(bad[1:2], function(b)
  epmc$title[b + c(-1, 0)]
)
```

Finally we are able to add the EuropePMC links.

```{r}
#| label: add EPMC
xout = xin
for(i in seq_len(nrow(epmc)))
  if (!is.na(mt[i])) 
    xout[records$line[mt[i]]] = 
      paste(sprintf("  EPMC = {%s},", epmc$url[i]),
            xout[records$line[mt[i]]],
            sep = "\n")
writeLines(xout, "lop+EPMC.bib")
```